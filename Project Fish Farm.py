# Программа для управления фермой поразведению рыбы.
# Сравнивает показатели прироста рыбы, расчитывает корректировки
# в производстве комбикорма, учитывает необходимость зукупок сырья
# Задаем стартовые показатели
fish = int(input('Какое поголовье рыбы?'))
# Запрос кол-ва сырья для производства комбикорма
corn = float(input('Сколько зерна в наличии на складе?'))
protein = float(input('Сколько белковых компонентов?'))
oil = float(input('Сколько жировых компонетов?'))
age = 1 # переменная указывающая текущий возраст рыбы в неделях
weight = 0.1 #переменная - стартовый вес одной рыбы
norm_weight = {age: age*weight*1.17 for age in range(20)} # справочник с нормой веса одной рыбы
# функция для расчета расхода компонентов для комбикорма и необходимости закупки
def buy_components():
    # переменные - текущей расход компонента в течении недели
    global cons_corn
    global cons_oil
    global cons_protein
    # определения глобальности переменных компонентов
    global corn
    global oil
    global protein
    # цикл для сравнения текущего расхода определенного компонента с наличием на складе и выводе информации
    # о необходимости закупки данного компонента
    if cons_corn > corn:
        print('Необходимо закупить зерновых компонентов')
        buy_corn = float(input('Сколько зерновых компонентов покупаем?'))
        corn += buy_corn # увеличиваем складские запасы на объем закупки
    elif cons_protein > protein:
        print('Необходимо закупить белковых компонентов')
        buy_protein = float(input('Сколько белковых компонентов покупаем?'))
        protein += buy_protein
    elif cons_oil > oil:
        print('Необходимо закупить жировых компонентов')
        buy_oil = float(input('Сколько жировых компонентов покупаем?'))
        oil += buy_oil
    else:
        print('Сырья для производства комбикорма хватает')
        # вычитаем объем текущего потребления из складских запасов
        corn -= cons_corn
        protein -= cons_protein
        oil -= cons_oil
while age < 20: #цикл расчета возраста рыбы (убойный возраст до 20недель)
    print('Сейчас', age,'неделя')
    weight = float(input('Сколько весит одна рыба?'))
    death = int(input('Какой падеж за текущую неделю?'))
    fish -=death #Корретировка количества рыбы
    norm_weight_age = norm_weight[age] #Норма веса рыбы на текущей неделе
    # цикл сравнения нормы веса с фактическим весом рыбы
    if norm_weight_age >= 0.99 * weight and norm_weight_age <= 1.01 * weight : # погрешность для в сравнении из-за округления
        print('Вес рыбы соответствует нормативным показателям')
        norm_eat = 0.01*weight*fish #Расчет нормы кормления (1% от веса рыбы)
        print('На', age,'-й неделе норма нормления - ', norm_eat/7, 'кг в день')
        # Сумма компонентов должна быть равна 1 (100%)
        cons_corn = 0.4*norm_eat
        cons_protein = 0.35 * norm_eat
        cons_oil = 0.25 * norm_eat
        # вызов функции для расчета расхода компонентов для комбикорма и необходимости закупки
        buy_components()
    elif norm_weight_age > 0.99*weight:
        differ_weight = norm_weight_age/weight - 1 # Переменная процента расхождения нормы и факта по весу
        print('Вес рыбы ниже нормы на', differ_weight, 'процентов')
        norm_eat = 0.01 * weight * fish  # Расчет нормы кормления (1% от веса рыбы)
        print('На', age, '-й неделе норма нормления - ', norm_eat / 7, 'кг в день')
        # Корректировка состава комбикорма
        cons_corn = 0.4 - 0.35 * differ_weight * norm_eat
        cons_protein = 0.35 * (1 + differ_weight) * norm_eat
        cons_oil = 0.25 * norm_eat
        # Вывод количества компонентов для производства комбикорма
        print('Необходима корректировка состава комбикорма\n'
              'Зерновые компоненты - ', cons_corn, '\n',
              'Белковые компоненты - ', cons_protein, '\n',
              'Жировые компоненты - ', cons_oil)
        buy_components()
    else:
        differ_weight = norm_weight_age / weight - 1
        print('Вес рыбы выше нормы на', differ_weight, 'процентов')
        norm_eat = 0.01 * weight * fish  # Расчет нормы кормления (1% от веса рыбы)
        print('На', age, '-й неделе норма нормления - ', norm_eat / 7, 'кг в день')
        cons_corn = 0.4 + 0.25 * differ_weight * norm_eat
        cons_protein = 0.35 * norm_eat
        cons_oil = 0.25 * (1 - differ_weight) * norm_eat
        print('Необходима корректировка состава комбикорма\n'
              'Зерновые компоненты - ', cons_corn, '\n',
              'Белковые компоненты - ', cons_protein, '\n',
              'Жировые компоненты - ', cons_oil)
        buy_components()
    # Расчет и вовод информации об остатках на конец недели
    corn -= cons_corn
    print('Остаток зерновых ком понентов на конец', age, 'недели - ', corn,'кг')
    protein -= cons_protein
    print('Остаток белковых ком понентов на конец', age, 'недели - ', protein, 'кг')
    oil -= cons_oil
    print('Остаток жировых ком понентов на конец', age, 'недели - ', oil, 'кг')
    # Добавляем неделю к возрасту
    age +=1


